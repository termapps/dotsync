syntax = "proto3";

package tech.dotsync;

message AttributePath {
  message Step {
    oneof selector {
      // Set "attribute_name" to represent looking up an attribute
      // in the current object value.
      string attribute_name = 1;
      // Set "element_key_*" to represent looking up an element in
      // an indexable collection type.
      string element_key_string = 2;
      int64 element_key_int = 3;
    }
  }

  repeated Step steps = 1;
}

message Diagnostic {
  enum Severity {
    INVALID = 0;
    ERROR = 1;
    WARNING = 2;
  }

  Severity severity = 1;
  AttributePath attribute = 2;

  string summary = 3;
  string detail = 4;
}

enum OperatingSystem {
  UNSPECIFIED_O_S = 0;
  MAC_O_S = 1;
  WINDOWS = 2;
}

enum LinuxDistribution {
  UNSPECIFIED_DISTRO = 0;
  DEBIAN = 1;
  UBUNTU = 2;
  FEDORA = 3;
  CENT_O_S = 4;
  R_H_E_L = 5;
  ARCH = 6;
  MANJARO = 7;
  OPEN_S_U_S_E = 8;
  GENTOO = 9;
  ALPINE = 10;
  SOLUS = 11;
  MINT = 12;
  POP_O_S = 13;
  NIX_O_S = 14;
  VOID = 15;
  Kali = 16;
}

service PluginService {
  rpc GetPluginSchema (GetPluginSchema.Request) returns (GetPluginSchema.Response);
  rpc ValidateResourceConfig(ValidateResourceConfig.Request) returns (ValidateResourceConfig.Response);

  rpc ReadResource(ReadResource.Request) returns (ReadResource.Response);
  rpc PlanResourceChange(PlanResourceChange.Request) returns (PlanResourceChange.Response);
  rpc ApplyResourceChange(ApplyResourceChange.Request) returns (ApplyResourceChange.Response);
  rpc ImportResourceState(ImportResourceState.Request) returns (ImportResourceState.Response);
}

message GetPluginSchema {
  message Request {
  }

  message Response {
    string id = 1;
    string version = 2;
    string description = 3;

    repeated OperatingSystem supported_os = 4;
    repeated LinuxDistribution supported_linux_distro = 5;
  }
}

message ValidateResourceConfig {
  message Request {
  }

  message Response {
    repeated Diagnostic diagnostics = 1;
  }
}

message ReadResource {
  message Request {
  }

  message Response {
  }
}

message PlanResourceChange {
  message Request {
  }

  message Response {
  }
}

message ApplyResourceChange {
  message Request {
  }

  message Response {
  }
}

message ImportResourceState {
  message Request {
  }

  message Response {
  }
}
